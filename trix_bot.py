from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes
import random
from datetime import datetime, timedelta

# –í–∞—à —Ç–æ–∫–µ–Ω API –æ—Ç BotFather
API_TOKEN = "7719119088:AAFoRl0wLWy-0CESMlIKoyzey8-npWwfGCY"

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_stars = {}
last_bonus_time = {}
last_activity = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    user_stars[user_id] = user_stars.get(user_id, 0)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—ë–∑–¥, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π

    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Trix Magic!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n"
        "/predict - –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ\n"
        "/stars - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥\n"
        "/bonus - –æ–±–º–µ–Ω—è—Ç—å –∑–≤—ë–∑–¥—ã –Ω–∞ –±–æ–Ω—É—Å"
    )

# –ö–æ–º–∞–Ω–¥–∞ /predict
async def predict(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    predictions = [
        "–°–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –∂–¥—ë—Ç —É–¥–∞—á–∞!",
        "–ó–≤—ë–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç –±—ã—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º.",
        "–≠—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Å—é—Ä–ø—Ä–∏–∑–æ–≤.",
    ]
    user_id = update.message.from_user.id
    user_stars[user_id] = user_stars.get(user_id, 0) + 1  # –î–æ–±–∞–≤–∏—Ç—å 1 –∑–≤–µ–∑–¥—É
    last_activity[user_id] = datetime.now()  # –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

    await update.message.reply_text(
        f"‚ú® –¢–≤–æ—ë –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {random.choice(predictions)}\n"
        f"‚≠ê –¢—ã –ø–æ–ª—É—á–∏–ª 1 –∑–≤–µ–∑–¥—É! –£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å {user_stars[user_id]} –∑–≤—ë–∑–¥."
    )

# –ö–æ–º–∞–Ω–¥–∞ /stars
async def stars(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    stars = user_stars.get(user_id, 0)
    await update.message.reply_text(f"‚≠ê –£ —Ç–µ–±—è {stars} –∑–≤—ë–∑–¥!")

# –ö–æ–º–∞–Ω–¥–∞ /bonus
async def bonus(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if user_stars.get(user_id, 0) >= 5:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –∑–≤—ë–∑–¥
        user_stars[user_id] -= 5  # –°–Ω–∏–º–∞–µ–º 5 –∑–≤—ë–∑–¥
        bonus_prediction = random.choice([
            "–¢–≤–æ–π –±–æ–Ω—É—Å: —Å–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π!",
            "–£–ª—ã–±–∫–∞ –ø—Ä–∏–Ω–µ—Å—ë—Ç —É–¥–∞—á—É.",
            "–ò–∑–±–µ–≥–∞–π —Å–ø–æ—Ä–æ–≤, –∏ –≤—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ!",
        ])
        await update.message.reply_text(
            f"üéÅ –ë–æ–Ω—É—Å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {bonus_prediction}\n"
            f"‚≠ê –£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {user_stars[user_id]} –∑–≤—ë–∑–¥."
        )
    else:
        await update.message.reply_text("‚ùå –£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥ –¥–ª—è –±–æ–Ω—É—Å–∞. –ù–∞–∫–æ–ø–∏ –º–∏–Ω–∏–º—É–º 5 –∑–≤—ë–∑–¥!")

# –ö–æ–º–∞–Ω–¥–∞ /miniapp –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
async def miniapp(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    stars = user_stars.get(user_id, 0)

    mini_app_url = f"https://trix-magic.github.io/trix-mini-app/?stars={stars}"
    keyboard = [[InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å Mini App", web_app=WebAppInfo(url=mini_app_url))]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App:",
        reply_markup=reply_markup
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(API_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("predict", predict))
    application.add_handler(CommandHandler("stars", stars))
    application.add_handler(CommandHandler("bonus", bonus))
    application.add_handler(CommandHandler("miniapp", miniapp))

    # –ó–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫–∞
    application.run_webhook(
        listen="0.0.0.0",
        port=8080,
        webhook_url="https://08b6-2a00-1858-1022-c70b-58ce-63d4-1caf-9dcc.ngrok-free.app/webhook"
    )

if __name__ == "__main__":
    main()
